package tools;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Iterator;
import java.util.List;

public abstract class FileGeneratorTool implements Iterator<String> {

  protected List<String> lines;
  protected int currentLine;

  public FileGeneratorTool() throws IOException {
    this.lines = Files.readAllLines(Path.of("src", "tools", "config", "tokens.txt"));
    this.currentLine = 0;
  }

  protected abstract void generate() throws IOException;

  @Override
  public boolean hasNext() {
    return this.currentLine < this.lines.size() - 1;
  }

  @Override
  public String next() {
    return this.lines.get(this.currentLine++);
  }

  protected String autoGeneratedWarning() {
    return String.join("",
        List.of(
            this.formatString(0, 1, "/**"),
            this.formatString(0, 1, " * This file is automatically generated"),
            this.formatString(0, 1, " * Do not manually update! (Use the CompilerTools to regenerate.)"),
            this.formatString(0, 1, " **/")));
  }

  protected String formatString(int tabCount, String content) {
    return this.formatString(tabCount, 0, content);
  }

  protected String formatString(int tabCount, int newLinesAfter, String content) {
    StringBuffer buffer = new StringBuffer();

    if (tabCount > 0) {
      buffer.append("    ".repeat(tabCount));
    }

    buffer.append(content);

    if (newLinesAfter > 0) {
      buffer.append(System.lineSeparator().repeat(newLinesAfter));
    }

    return buffer.toString();
  }
}
